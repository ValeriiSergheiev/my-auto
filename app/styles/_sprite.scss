// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$fb-name: 'fb';
$fb-x: 0px;
$fb-y: 0px;
$fb-offset-x: 0px;
$fb-offset-y: 0px;
$fb-width: 30px;
$fb-height: 30px;
$fb-total-width: 104px;
$fb-total-height: 75px;
$fb-image: '../images/sprite.png';
$fb: (0px, 0px, 0px, 0px, 30px, 30px, 104px, 75px, '../images/sprite.png', 'fb', );
$fuel-name: 'fuel';
$fuel-x: 60px;
$fuel-y: 30px;
$fuel-offset-x: -60px;
$fuel-offset-y: -30px;
$fuel-width: 18px;
$fuel-height: 18px;
$fuel-total-width: 104px;
$fuel-total-height: 75px;
$fuel-image: '../images/sprite.png';
$fuel: (60px, 30px, -60px, -30px, 18px, 18px, 104px, 75px, '../images/sprite.png', 'fuel', );
$geo-name: 'geo';
$geo-x: 90px;
$geo-y: 0px;
$geo-offset-x: -90px;
$geo-offset-y: 0px;
$geo-width: 14px;
$geo-height: 18px;
$geo-total-width: 104px;
$geo-total-height: 75px;
$geo-image: '../images/sprite.png';
$geo: (90px, 0px, -90px, 0px, 14px, 18px, 104px, 75px, '../images/sprite.png', 'geo', );
$inst-name: 'inst';
$inst-x: 30px;
$inst-y: 0px;
$inst-offset-x: -30px;
$inst-offset-y: 0px;
$inst-width: 30px;
$inst-height: 30px;
$inst-total-width: 104px;
$inst-total-height: 75px;
$inst-image: '../images/sprite.png';
$inst: (30px, 0px, -30px, 0px, 30px, 30px, 104px, 75px, '../images/sprite.png', 'inst', );
$motor-name: 'motor';
$motor-x: 18px;
$motor-y: 60px;
$motor-offset-x: -18px;
$motor-offset-y: -60px;
$motor-width: 18px;
$motor-height: 14px;
$motor-total-width: 104px;
$motor-total-height: 75px;
$motor-image: '../images/sprite.png';
$motor: (18px, 60px, -18px, -60px, 18px, 14px, 104px, 75px, '../images/sprite.png', 'motor', );
$odo-name: 'odo';
$odo-x: 0px;
$odo-y: 60px;
$odo-offset-x: 0px;
$odo-offset-y: -60px;
$odo-width: 18px;
$odo-height: 15px;
$odo-total-width: 104px;
$odo-total-height: 75px;
$odo-image: '../images/sprite.png';
$odo: (0px, 60px, 0px, -60px, 18px, 15px, 104px, 75px, '../images/sprite.png', 'odo', );
$tel-name: 'tel';
$tel-x: 90px;
$tel-y: 18px;
$tel-offset-x: -90px;
$tel-offset-y: -18px;
$tel-width: 14px;
$tel-height: 14px;
$tel-total-width: 104px;
$tel-total-height: 75px;
$tel-image: '../images/sprite.png';
$tel: (90px, 18px, -90px, -18px, 14px, 14px, 104px, 75px, '../images/sprite.png', 'tel', );
$tw-name: 'tw';
$tw-x: 0px;
$tw-y: 30px;
$tw-offset-x: 0px;
$tw-offset-y: -30px;
$tw-width: 30px;
$tw-height: 30px;
$tw-total-width: 104px;
$tw-total-height: 75px;
$tw-image: '../images/sprite.png';
$tw: (0px, 30px, 0px, -30px, 30px, 30px, 104px, 75px, '../images/sprite.png', 'tw', );
$vk-name: 'vk';
$vk-x: 30px;
$vk-y: 30px;
$vk-offset-x: -30px;
$vk-offset-y: -30px;
$vk-width: 30px;
$vk-height: 30px;
$vk-total-width: 104px;
$vk-total-height: 75px;
$vk-image: '../images/sprite.png';
$vk: (30px, 30px, -30px, -30px, 30px, 30px, 104px, 75px, '../images/sprite.png', 'vk', );
$yt-name: 'yt';
$yt-x: 60px;
$yt-y: 0px;
$yt-offset-x: -60px;
$yt-offset-y: 0px;
$yt-width: 30px;
$yt-height: 30px;
$yt-total-width: 104px;
$yt-total-height: 75px;
$yt-image: '../images/sprite.png';
$yt: (60px, 0px, -60px, 0px, 30px, 30px, 104px, 75px, '../images/sprite.png', 'yt', );
$spritesheet-width: 104px;
$spritesheet-height: 75px;
$spritesheet-image: '../images/sprite.png';
$spritesheet-sprites: ($fb, $fuel, $geo, $inst, $motor, $odo, $tel, $tw, $vk, $yt, );
$spritesheet: (104px, 75px, '../images/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
